@page "/learningpage"
@using SEIIApp.Shared.DomainDto.StatusDto
@using SEIIApp.Shared.DomainDto
@inject Services.BackendAccessService BackendAccessService
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager


<h3 style="font-family: 'Mate SC', serif;">Learning Page for Chapter: "@currentChapter" of Course "@currentCourse"</h3>

<style>
    p {
        width: 30em;
        padding-top: 100px;
    }
</style>


<div style="text-align: center">
    <button class="btn btn-info" style="font-family: 'Mate SC', serif;" @onclick="() => DownloadContent(content[0])">Download PDF</button><br><br>
    <button class="btn btn-info" style="font-family: 'Mate SC', serif;" @onclick="RouteToQuizpage" >Go to Quiz</button>

</div>

<style>
    p {
        width: 30em;
        padding-top: 100px;
    }
</style>



<div text-align: center">

    <iframe width="560" height="315" src="https://www.youtube.com/embed/rnLkl6Bl9P0" title="YouTube video player"
            frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen>
    </iframe>
</div>

@code
{
    string currentChapter = "Emergency Situations";

    string currentCourse = "Basics of Neonatology I";

    ContentDto[] content = new ContentDto[0];


    private async void DownloadContent(ContentDto contentDto)
    {
        var getContent = await BackendAccessService.GetContentById(contentDto.ContentId);

        string[] base64String = getContent.Path.Split(',');

        await JsRuntime.InvokeVoidAsync("downloadFile", "application/pdf", base64String[1], getContent.ContentName);
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        content = await BackendAccessService.GetAllContent();
    }

    private void RouteToQuizpage()
    {
        NavigationManager.NavigateTo("/chapterquiz");
    }
}