@page "/repetitionpage/{UserId:int}"
@using SEIIApp.Shared.DomainDto
@using SEIIApp.Shared.DomainDto.StatusDto
@inject Services.BackendAccessService BackendAccessService
@inject NavigationManager NavigationManager


<h1 style="color:DodgerBlue" align="center">NeoLearn</h1>
<br />
<h2 align="center">Repetitionpage</h2>

<div style="font-size:32px"> &nbsp;</div>

<center>
    @{
        if (questions != null)
        {
            if (questions.Count > 0)
            {
                <div class="container-md">
                    <SEIIApp.Client.Components.QuizHelper isFinished=@pileFinished Question="questions.First()" next="ClickHandler" studentId="@UserId"></SEIIApp.Client.Components.QuizHelper>
                </div>
            }
            else
            {
                <br />
                <div align="center">
                    <p style="font-size:16pt;color:green">
                        <b>Super! All questions have been answered!</b>
                    </p>
                </div>
            }
        }
        else if (noQuestions)
        {
            <div align="center">
                <p style="font-size:16pt;color:green" align="center">
                    <b>Great, you are up to date. No repetition questions to answer!</b>
                </p>
            </div>
        }

    }

</center>

<div style="font-size:32px"> &nbsp;</div>
<div align="center">
    <button type="button" class="text-white" style="font-family: Consolas; border: thin solid white; background-color:  #5470f0" @onclick="RouteToHomepageUser">

        <span aria-hidden="true">
            🏠
        </span> Home
    </button><br />
</div>

@code {

    [Parameter]
    public int UserId { get; set; }

    bool pileFinished = false;

    bool noQuestions = false;


    public void ClickHandler(bool next)
    {
        if (questions.Count > 0)
        {
            questions.Remove(questions.First());
        }
        else
        {
            pileFinished = true;
        }
    }

    List<QuestionDto> questions;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        QuestionStatusDto[] contentStatus = await BackendAccessService.GetAllQuestionsForRepetition(UserId);
        if (contentStatus.Length > 0)
        {
            questions = contentStatus.Select(x => x.Question).ToList();
        }
        else
        {
            noQuestions = true;
        }
    }

    private void RouteToHomepageUser()
    {
        NavigationManager.NavigateTo($"/homepageuser/{UserId}");
    }

}