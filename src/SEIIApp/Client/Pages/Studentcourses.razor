@page "/studentcourses/{UserId:int}"
@using SEIIApp.Shared.DomainDto
@using SEIIApp.Shared.DomainDto.StatusDto
@using SEIIApp.Client.Components
@inject Services.BackendAccessService BackendAccessService
@inject NavigationManager NavigationManager

<h2>Hello @_studentIdentity! </h2>
<h3>These are your enrolled courses:</h3>

<br/>
<br/>

@{
    if (AllCourses?.Length > 0)
    {
        <ol>
            @foreach (var course in AllCourses)
            {
                <li>@course.Course.CourseName</li>
                <br />
                <CourseComponent CourseId="@course.Course.CourseId" UserId="@StudentUser.UserId"></CourseComponent>
                
                <br />
                <label>These are the chapters you already worked on:</label>
                <ol>
                    @foreach (var chapter in course.Course.Chapters)
                    {
                        <li>
                            @chapter.ChapterName
                            <button type="button" class="text-white" style="border:thin solid white;background-color:@buttonColor" @onclick="@(e => StartCourse(chapter))">
                                <span aria-hidden="true">
                                    ▶
                                </span>Start Chapter
                            </button>
                            @(((from chapterStatus in AllChapters
                                                            where chapterStatus.Chapter.ChapterId == chapter.ChapterId
                                                            select chapterStatus.Finished).FirstOrDefault()) ? "Chapter finished ✅" : "Chapter not finished ❌")

                        </li>
                    }
                </ol>
            }
        </ol>
    }
}

<p>@message</p>
<br/>
<br/>
 <button type="button" class="text-white" style="font-family: Consolas; border: thin solid white; background-color:  #5470f0" @onclick="RouteToHomepageUser">

            <span aria-hidden="true">
                🏠
            </span> Home
        </button>
@code {

    [Parameter]
    public int UserId { get; set; }

    public string buttonColor = "#5470f0";

    private StudentDto StudentUser { get; set; }

    private string _studentIdentity = "student";

    private CourseStatusDto[] AllCourses { get; set; }
    
    private ChapterStatusDto[] AllChapters { get; set; }

    private string message = "Please choose a course.";

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        StudentUser = await BackendAccessService.GetStudentById(UserId);
        _studentIdentity = StudentUser.UserName;

        AllCourses = await BackendAccessService.GetAllEnrolledCourses(StudentUser.UserId);
        AllChapters = await BackendAccessService.GetAllChapterStatusByUserId(StudentUser.UserId);
    }

    private void StartCourse(CourseStatusDto courseStatusDto)
    {
        if (courseStatusDto.Course.Chapters is {Length: > 0 })
        {
            var chapterId = courseStatusDto.Course.Chapters[0].ChapterId;
            NavigationManager.NavigateTo($"/learningpage/{UserId}/{chapterId}");
        }
        else
        {
            message = "Error with this course, please contact the course administrator";
        }
    }

    private void StartCourse(ChapterDto chapterDto)
    {
        NavigationManager.NavigateTo($"/learningpage/{UserId}/{chapterDto.ChapterId}");
    }

    private void RouteToHomepageUser()
    {
        NavigationManager.NavigateTo($"/homepageuser/{UserId}");
    }

}